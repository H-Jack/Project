<?php

namespace app\api\controller;

use app\api\service\Jwtcustom;
use app\lib\exception\CatogenException;
use app\lib\exception\TokenisException;
use EasyWeChat\Kernel\Exceptions\Exception;
use think\Controller;
use think\Request;
use Firebase\JWT\JWT;

class Base extends Controller
{
    protected $id;
    protected $newtoken = '';

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $request = new Request;
                //刷新token
        try {
            $refresh_token = $request->header('token2');
            $this->resultoken($refresh_token,0);
        }catch (\Firebase\JWT\ExpiredException $e){
            throw new CatogenException();
        }catch(\Firebase\JWT\SignatureInvalidException $e) {  // 签名不正确
            echo $e->getMessage();exit('签名不正确');
        }catch (\think\Exception $e) {              //其他错误
            echo $e->getMessage();exit('错误');
        }
                //请求token
        try {
            $access_token = $request->header('token');
            $this->resultoken($access_token,1);
        }catch (\Firebase\JWT\ExpiredException $e) {
            $newtoken = Jwtcustom::getoken($this->id,1);   //刷新token 通过header返回前台
            header('token:'.$newtoken);exit('token过期请更换');
        }catch (\think\Exception $e) {              //其他错误
            echo $e->getMessage();exit('错误');
        }catch(\Firebase\JWT\SignatureInvalidException $e) {  // 签名不正确
            echo $e->getMessage();exit('签名不正确');
        }
    }
    

    /**
     * 解密token
     * $token 是加密字符串
     * $to 是判断是token1还是token2。
     */
    public function resultoken($token,$to)
    {
            $decoded = JWT::decode($token, config('wechat.key'), array('HS256'));
            if(empty($decoded->userinfos->uid))
                throw new TokenisException();
            if($to){
                if(empty($decoded->to))
                    throw new TokenisException();
            }else{
                if(!empty($decoded->to))
                    throw new TokenisException();
            }
            $this->id = $decoded->userinfos->uid;
    }

    /**
     * 空方法
     */
    public function _empty()
    {
        return json(['msg'=>'空方法']);
    }
}
